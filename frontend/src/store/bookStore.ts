import { create } from 'zustand';\nimport { BookInfo, ChapterInfo } from '../types/book';\n\ninterface BookState {\n  currentBook: BookInfo | null;\n  chapters: ChapterInfo[];\n  currentChapter: ChapterInfo | null;\n  currentChapterIndex: number;\n  originalText: string;\n  translatedText: string;\n  isTranslating: boolean;\n  isGeneratingAudio: boolean;\n  audioUrl: string | null;\n  \n  // Actions\n  setCurrentBook: (book: BookInfo) => void;\n  setChapters: (chapters: ChapterInfo[]) => void;\n  setCurrentChapter: (chapter: ChapterInfo, index: number) => void;\n  setOriginalText: (text: string) => void;\n  setTranslatedText: (text: string) => void;\n  setTranslating: (isTranslating: boolean) => void;\n  setGeneratingAudio: (isGenerating: boolean) => void;\n  setAudioUrl: (url: string | null) => void;\n  clearBook: () => void;\n}\n\nexport const useBookStore = create<BookState>((set, get) => ({\n  currentBook: null,\n  chapters: [],\n  currentChapter: null,\n  currentChapterIndex: 0,\n  originalText: '',\n  translatedText: '',\n  isTranslating: false,\n  isGeneratingAudio: false,\n  audioUrl: null,\n\n  setCurrentBook: (book) => set({ currentBook: book }),\n  \n  setChapters: (chapters) => set({ chapters }),\n  \n  setCurrentChapter: (chapter, index) => set({ \n    currentChapter: chapter, \n    currentChapterIndex: index,\n    originalText: '',\n    translatedText: '',\n    audioUrl: null\n  }),\n  \n  setOriginalText: (text) => set({ originalText: text }),\n  \n  setTranslatedText: (text) => set({ translatedText: text }),\n  \n  setTranslating: (isTranslating) => set({ isTranslating }),\n  \n  setGeneratingAudio: (isGenerating) => set({ isGeneratingAudio }),\n  \n  setAudioUrl: (url) => set({ audioUrl: url }),\n  \n  clearBook: () => set({\n    currentBook: null,\n    chapters: [],\n    currentChapter: null,\n    currentChapterIndex: 0,\n    originalText: '',\n    translatedText: '',\n    isTranslating: false,\n    isGeneratingAudio: false,\n    audioUrl: null\n  })\n}));